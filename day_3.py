# -*- coding: utf-8 -*-
"""day 3.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1IL8X7ez8bldYntfyJdL3xTxzmgMfF8z5
"""

import numpy as np

energy_consumption = np.array([2000,1200,2020,500,9632])
print("energy Consumtion (in MWH) for different Renevable sources:",energy_consumption)

np.sum(energy_consumption)

mean_ene_cons = np.mean(energy_consumption)
print(f'The average energy consumption is {mean_ene_cons:.2f}MWh')

np.std(energy_consumption)

#Reshape
reshape_array = energy_consumption.reshape((5, 1))
reshape_array

data={
    "Energy Source":["Solar","Wind","Biomass","Geothermal","Nuclear","Hydropower"],
    "Energy Consumption (MWh)":[1200,np.nan,2900,np.nan,2500,3200],
    "Cost (Million $)":[200,400,np.nan,150,250,np.nan]
}

import pandas as pd

Energy_df=pd.DataFrame(data)
Energy_df.head()

cleaned_Energy_df = Energy_df.dropna()
print(cleaned_Energy_df)

Energy_df['Energy Consumption (MWh)'] = Energy_df['Energy Consumption (MWh)'].fillna(Energy_df['Energy Consumption (MWh)'].mean())
Energy_df['Cost (Million $)'] = Energy_df['Cost (Million $)'].fillna(Energy_df['Cost (Million $)'].mean())
Energy_df

#Data preprocessing
from sklearn.preprocessing import MinMaxScaler

scaler = MinMaxScaler()
Energy_df[['Energy Consumtion (MWh)','Cost(Million $)']]= scaler.fit_transform(Energy_df[['Energy Consumption (MWh)','Cost (Million $)']])
print(Energy_df)

from sklearn.preprocessing import StandardScaler
std_scaler = StandardScaler()
Energy_df[['Energy Consumption (MWh)','Cost (Millon $)']] = std_scaler.fit_transform(
    Energy_df[['Energy Consumption (MWh)','Cost (Million $)']]
)
Energy_df

# encoding
Energy_encoded_df = pd.get_dummies(Energy_df,columns=['Energy Source'])
Energy_encoded_df

months = ['Jan','Feb','Mar','Apri','May','Jun']
Energy_Cost = [1300,1200,1800,500,1700,1800]

import matplotlib.pyplot as plt
plt.plot(months,Energy_Cost, marker='o',linestyle='dashed',color='y')
plt.title('Energy_Cost Consumption as months')
plt.xlabel('months')
plt.ylabel('Energy Consumption (MWh)')
plt.show()

Energy_Sources = ['Solar','Wind','Hydropower','Biomass']
Energy_Cost = [1300,1200,1800,500]

plt.bar(Energy_Sources,Energy_Cost,color='y')
plt.title('Energy_Sources vs Energy_Cost')
plt.xlabel('Energy_Sources')
plt.ylabel('Energy Consumption (MWh)')
plt.show()

plt.pie(Energy_Cost,labels=Energy_Sources,autopct='%1.1f%%')
plt.title('Energy_Cost Consumption as months')
plt.show()

import matplotlib.pyplot as plt

#scatter plot
carbon_emission = [200,500,450,300] #in kg CO2
Energy_Sources = ['Wind','Solar','Hydro','Power']
plt.scatter(Energy_Sources, carbon_emission, color='red')
plt.show()

# custamization bar plot
plt.bar(Energy_Sources,carbon_emission, color='orange',edgecolor='green',linewidth=2)
plt.title("Customized bar plot")
plt.xlabel('Energy_Sources',fontsize=12)
plt.ylabel('carbon_emission',fontsize=12)
plt.grid(True, linestyle='--',alpha=0.7)
plt.legend(['Energy Consumption (MWh)'],loc='upper left')
plt.show()

import seaborn as sns
import pandas as pd

data={
    "sol":[30,20,40,15,60],
    "wind":[700,850,930,825,745],
    "pow":[100,500,560,470,890],
    "geo":[600,500,400,700,800],
    "hydro":[785,965,325,654,785]
}
df=pd.DataFrame(data)
sns.pairplot(df)
plt.show()

corr_matrix=df.corr()
corr_matrix

sns.heatmap(corr_matrix,annot=True,cmap='coolwarm',linewidths=0.5)
plt.title('correlation between Energy Resources')
plt.show()

sns.boxplot(data=df)

# Violin plot
sns.violinplot(data=df)
plt.show()

# Regression plot
Energy_Values = [100,200,300,400]
Carbon_Emission = [10,20,30,40]
df_reg = pd.DataFrame(
{
    "Energy_Values":Energy_Values,
    "Carbon_Emission":Carbon_Emission
})

sns.regplot(x='Energy_Values',y='Carbon_Emission',data=df_reg)
plt.show()

